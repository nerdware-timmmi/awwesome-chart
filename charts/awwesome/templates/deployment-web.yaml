apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "awwesome.fullname" . }}
  labels:
    app: awwesome
    {{- include "awwesome.labels" . | nindent 4 }}
    {{- if .Values.web.labels }}
    {{- with .Values.web.labels }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app: awwesome
  {{- include "awwesome.selectorLabels" . | nindent 6 }}
  progressDeadlineSeconds: 600
  replicas: {{ .Values.replicas | default 1}}
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      {{- with .Values.web.podAnnotations }}
      annotations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: awwesome
        {{- include "awwesome.selectorLabels" . | nindent 8 }}
        {{- if .Values.web.labels }}
        {{- with .Values.web.labels }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    spec:
      initContainers:
        - name: {{ .Chart.Name }}-initialize
          image: "{{ .Values.generator.image.repository | default "mkitzmann/awwesome"  }}:{{ .Values.generator.image.tag | default "latest" }}"
          command: ["/bin/sh"]
          workingDir: "/usr/src/app"
          args:
            - -c
            - |
              echo "TOKEN_GITHUB=$(echo -n $GITHUB_TOKEN)" > /usr/src/app/.env
              cd /usr/src/app/
              npm run build
              rm -rf {{ .Values.web.mountPath | default "/usr/share/nginx/html" }}/*
              cp -r dist/* {{ .Values.web.mountPath | default "/usr/share/nginx/html" }}
              exit 0
          volumeMounts:
            - name: {{ include "awwesome.fullname" . }}-volume
              mountPath: {{ .Values.web.mountPath | default "/usr/share/nginx/html" }}
          env:
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.generator.secret.name | default "awwesome" }}
                  key: {{ .Values.generator.secret.key | default "github_token" }}
          {{- if .Values.generator.resources }}
          resources:
          {{- toYaml .Values.generator.resources | nindent 12 }}
          {{- end }}
      containers:
        - image: "{{ .Values.web.image.repository | default "nginx"  }}:{{ .Values.web.image.tag | default "alpine" }}"
          imagePullPolicy: {{ .Values.web.image.imagePullPolicy | default "Always" }}
          name: {{ .Chart.Name }}
          ports:
            - containerPort: 80
              name: {{ include "awwesome.fullname" . }}
              protocol: TCP
          {{- if .Values.web.resources }}
          resources:
          {{- toYaml .Values.web.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: {{ include "awwesome.fullname" . }}-volume
              mountPath: {{ .Values.web.mountPath | default "/usr/share/nginx/html" }}
          livenessProbe:
            failureThreshold: 30
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      {{- with .Values.web.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: {{ include "awwesome.fullname" . }}-volume
          persistentVolumeClaim:
            claimName: {{ include "awwesome.fullname" . }}-pvc
